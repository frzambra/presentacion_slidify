htmlCode = readLines(con)
close(con)
htmlCode
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
library(XML)
html <- htmlTreeParse(url, useInternalNodes=T)
html
html <- htmlTreeParse(url, useInternalNodes=F)
library(XML)
html <- htmlTreeParse(url, useInternalNodes=F)
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=T)
html
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
xpathSApply(html, "//td[@id='gsc_prf_w']", xmlValue)
xpathSApply(html, "//td[@id='gsc_a_y']", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
html
str(html)
dim(html)
html
head(html)
html
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=T)
library(XML)
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
library(httr)
html2 <- GERT(url)
html2 <- GET(url)
content2 <- content(html2, as="text")
content2
parsedHtml = htmlParse(content2, asText=TRUE)
parsedHtml = htmlParse(content2, asText=TRUE)
xpathSApply(parsedHtml,"//title",xmlValue)
pg2 = GET(url,authenticate("user","passwd"))
pg2
url='http://httpbin.org/basic-auth/user/passwd'
pg2 = GET(url,authenticate("user","passwd"))
pg2
names(pg2)
google = handle("http://google.com")
pg1= GET(handle=google,path='/')
pg1
pg2= GET(handle=google,path='search')
pg2
str(pg2)
myapp = oauth_app("twitter",
key="yourConsumerKeyHere",
secret="yourConsumeSecretHere")
sig = sign_oauth1.0(myapp,
token="yourTokenHere",
token_secret = "yourTokenSecretHere")
myapp = oauth_app("twitter",
key="yourConsumerKeyHere",
secret="yourConsumeSecretHere")
sig = sign_oauth1.0(myapp,
token="yourTokenHere",
token_secret = "yourTokenSecretHere")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json,sig")
homeTL
homeTL
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
install.packages('jsonlite')
install.packages("jsonlite")
library(jsonlite)
json1 = content(homeTL)
?content
library(httr)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json1
json2
json2 = jsonlite::fromJSON(toJSON(json1))
json1
toJSON(json1)
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json,sig")
library(jsonlite)
library(httr)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv',method='wget')
download.file('acs.csv','https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv',method='wget')
?download.file
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv','acs.csv',method='wget')
acs<-read.csv('acs.csv')
head(acs)
library(sqldf)
install.packages('sqldf')
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50")
?sqldf
str(acs)
acs$pwgtp1
acs$AGEP
sqldf("select pwgtp1 from acs where AGEP < 50")
readLines("http://biostat.jhsph.edu/~jleek/contact.html",10 )
nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html",10 ))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html",10 )))
nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html",10 ))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html",10 ))
)
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[10])
)
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[20]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[30]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[100]))
readLines("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
noaa<-readLines("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
noaa
str(noaa)
class(a)
class(noaa)
class(noaa)[1]
noaa[1]
noaa[2]
noaa[3]
noaa[4]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","file.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","file.csv",method='wget')
read.csv('file.csv',skip=3)
df<-read.csv('file.csv',skip=3)
head(df)
str(df)
df<-read.csv('file.csv',skip=4)
head(df)
str(df)
df<-read.csv('file.csv',skip=4,header=FALSE)
head(df)
str(df)
df<-read.csv('file.csv',skip=4,sep='\t')
str(df)
myapp = oauth_app("twitter",
key="yourConsumerKeyHere",
secret="yourConsumeSecretHere")
library(httr)
myapp = oauth_app("twitter",
key="yourConsumerKeyHere",
secret="yourConsumeSecretHere")
sig = sign_oauth1.0(myapp,
token="yourTokenHere",
token_secret = "yourTokenSecretHere")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json,sig")
homeTL
json1 = content(homeTL)
json1
json2 = jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
library(httr)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
?formJSON
?formJSON
?fromJSON
toJSON(json1)
?toJSON
json1
xmlToList(json1)
??xmlToList
library(XML)
xmlToList(json1)
json1
content(homeTL)
json1 = content(homeTL)
json1
toJSON(json1)
json1
json1 = content(homeTL)
json1
xmlToList(json1)
json1
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(xmlToList(json1)))
json2
homeTL
json2[1,1:4]
str(json2)
?xmlToDataFrame
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(xmlToDataFrame(json1)))
json1 = content(homeTL)
xmlToDataFrame(json1)
json1
class(json1)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json
json1
json1[[1]]
json1[1]
json1 = content(homeTL)
json[1]
json1
json1[1]
class(json1)
length(class(json1))
json1
toJSON(json1)
json1
json1 = content(homeTL)
json1
formJSON(json1)
fromJSON(json1)
json1
class(json1)
xmlToList(json1)
toJSON(xmlToList(json1))
jsonlite::fromJSON(toJSON(xmlToList(json1)))
hist
setwd('~/tmp')
data<-read.csv("datos_julio.csv")
data
data<-read.csv2("datos_julio.csv")
data
summary(data)
boxplot(data[,2:4])
hist(data[,2:4])
data
plot(ecdf(data[,2:4]))
plot(ecdf(data[,2]))
plot(ecdf(data[,3]),add=T)
plot(ecdf(data[,2]))
plot(ecdf(data[,3]),add=T,col='blue')
plot(ecdf(data[,4]),add=T,col='red')
hist(data[,2])
hist(data[,2],20)
library(ggplot2)
library(reshape2)
data.m<-melt(data,id='Fecha')
head(data.m)
ggplot(data.m)+geom_line(aes(x=Fecha,y=value,colour=variable))
str(data.m)
data.m$Fecha<-as.Date(data.m$Fecha,format="%d-%m-%Y")
str(data.m)
ggplot(data.m)+geom_line(aes(x=Fecha,y=value,colour=variable))
head(data)
data$year<-format(data$Fecha,%Y)
data$year<-format(data$Fecha,"%Y")
data$Fecha
data$Fecha<-as.Date(data$Fecha,format="%d-%m-%Y")
data$year<-format(data$Fecha,"%Y")
data$mes<-format(data$Fecha,"%m")
data
library(plyr)
data.summ<-ddply(data,(year,mes),numclowise='mean')
?ddply
data.summ<-ddply(data,.(year,mes),numclowise='mean')
data.summ
data.summ<-ddply(data,.(year,mes),numcolwise='mean')
data.summ
data.summ<-ddply(data,.(year,mes),numcolwise(mean))
data.summ
data.summ.m<-melt(data.summ,id=c('year','mes'))
data.summ.m
ggplot(data.summ.m)+geom_bar(aes(x=mes,y=value,fill=variable),stat='identity')
ggplot(data.summ.m)+geom_bar(aes(x=mes,y=value,fill=variable),stat='identity',position='stack')
?geom_bar
ggplot(data.summ.m)+geom_bar(aes(x=mes,y=value,fill=variable),stat='identity',position='dodge')
ggplot(data.m)+geom_line(aes(x=Fecha,y=value,colour=variable))
ggplot(data.m)+geom_line(aes(x=Fecha,y=value,colour=variable))+facet_wrap(~variable)
summary(data)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "b8ed25efe409b5f46f73",
secret = "cec77c1e9e7cecdd5e583f793f599a9912e0573b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
acs<-read.csv('acs.csv')
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50")
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[10]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[20]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[30]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[100]))
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
summ(x$V9)
sum(x$V9)
sum(x$V4)
x <- read.fwf(
file='file.csv',
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
list.files()
setwd('~')
list.files()
x <- read.fwf(
file='file.csv',
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
sum(x$V4)
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[10]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[20]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[30]))
sum(nchar(readLines("http://biostat.jhsph.edu/~jleek/contact.html" )[100]))
rm(list=ls())
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/scaledIndex.R')
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/selec_period.R')
require('raster')
dir<-'/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/NDVISM.chl.monthly.1km'
lf<-list.files(dir,pattern='lowess.tif$')
lf2<-list.files(dir,full.names=TRUE,pattern='lowess.tif$')
per<-seq(1,366,16)
per<<-sprintf("%03d", per)
setwd('/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/VCI.chl.16.1km')
for (i in 1:12){
indx<-seq(i,length(lf),12)
ndvi<-stack(lf2[indx])
system.time(result<-scaledIndex(ndvi,spatial.tools=TRUE,cpus=8))
system.time(result<-calc(result,function(x){round(x*100,0)}))
names(result)<-paste0(substr(names(ndvi),1,26),'VCI')
writeRaster(result,names(result),NAflag=-1000,format='GTiff',overwrite=TRUE,bylayer=TRUE,suffix='names',overwrite=TRUE)
}
getwd()
names(result)
i
indx<-seq(i,length(lf),12)
ndvi<-stack(lf2[indx])
system.time(result<-scaledIndex(ndvi,spatial.tools=TRUE,cpus=4))
setwd('/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/VCI.chl.monthly.16.1km')
setwd('/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/VCI.chl.monthly.1km')
system.time(result<-calc(result,function(x){round(x*100,0)}))
names(result)<-paste0(substr(names(ndvi),1,26),'VCI')
writeRaster(result,names(result),NAflag=-1000,format='GTiff',overwrite=TRUE,bylayer=TRUE,suffix='names',overwrite=TRUE)
writeRaster(result,names(result),NAflag=-1000,format='GTiff',overwrite=TRUE,bylayer=TRUE,suffix='names')
for (i in 2:12){
indx<-seq(i,length(lf),12)
ndvi<-stack(lf2[indx])
system.time(result<-scaledIndex(ndvi,spatial.tools=TRUE,cpus=4))
system.time(result<-calc(result,function(x){round(x*100,0)}))
names(result)<-paste0(substr(names(ndvi),1,26),'VCI')
writeRaster(result,names(result),NAflag=-1000,format='GTiff',overwrite=TRUE,bylayer=TRUE,suffix='names')
}
rm(list=ls())
15+8
source('/home/francisco/Dropbox/scripts/R/paquetes/sequia_modis/modisDate.R')
modisDate(2015113)
modisDate(2015105)
modisDate(2015121)
modisDate(2015129)
8+9
129+8
modisDate(20151237)
modisDate(2015137)
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/downModisData.R')
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/modisExtract.R')
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/renameLST.R')
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/mascaraNubes.R')
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/convertToDataLibrary8Bit.R')
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/LST16.R')
require('sendmailR')
dir<-'/mnt/sdb1/Respaldo_INIA/'
modisExtract(prod='MOD11A2.005',band=c(1,0,0,0,0,0,0,0,0,0,0,0),modisdir='/media/Imagenes/MODIS',outdir="/media/Imagenes/Resultados/LST.chl.8.1km")
modisExtract(prod='MOD11A2.005',band=c(1,0,0,0,0,0,0,0,0,0,0,0),modisdir=file.path(dir,'/Imagenes/MODIS'),outdir=file.path(dir,"/Imagenes/Resultados/LST.chl.8.1km"))
source('/home/francisco/Dropbox/scripts/R/paquetes/sequia_modis/modisDate.R')
source('/home/francisco/Dropbox/scripts/R/paquetes/sequia_modis/seqModis.R')
library(raster)
dir<-'/media/Imagenes/Resultados/LST.chl.8.1km'
lf<-list.files(dir,pattern='*.tif$',full.names=TRUE)
lst8<-stack(lf)
dir<-'/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/LST.chl.8.1km'
lf<-list.files(dir,pattern='*.tif$',full.names=TRUE)
lst8<-stack(lf)
plot(lf[[1]])
dim(lf)
nlayers(lf)
lf
renameLST("/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/LST.chl.8.1km/")
source('/home/francisco/Dropbox/scripts/R/paquetes/sequia_modis/modisDate.R')
source('/home/francisco/Dropbox/scripts/R/paquetes/sequia_modis/seqModis.R')
library(raster)
dir<-'/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/LST.chl.8.1km'
lf<-list.files(dir,pattern='*.tif$',full.names=TRUE)
lf
renameLST("/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/LST.chl.8.1km/")
lis.files("/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/LST.chl.8.1km/")
list.files("/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/LST.chl.8.1km/")
renameLST
lf
lst
lst8
source('/home/francisco/Dropbox/scripts/R/paquetes/sequia_modis/modisDate.R')
source('/home/francisco/Dropbox/scripts/R/paquetes/sequia_modis/seqModis.R')
library(raster)
dir<-'/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/LST.chl.8.1km'
lf<-list.files(dir,pattern='*.tif$',full.names=TRUE)
lst8<-stack(lf)
lf
extent(lst8[[692]])
lst8
lst8<-stack(lf)
extent(lst8[[692]])
lst8
lst1<-raster(lf[[692]])
lst1
extent(lst1)
lst2<-raster(lf[[700]])
extent(lst2)
lst1<-raster(lf[[1]])
extent(lst1)
lst1<-raster(lf[[600]])
extent(lst1)
lst2
extent(lst2)<-extent(lst1)
getwd()
setwd('~')
writeRaster(lst2,'prueba.tif',format='GTiff')
getwd()
library(raster)
dir<-'/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/'
lfvci<-list.files(file.path(dir,'VCI.chl.16.1km'),full.names=TRUE,pattern='*.tif$')
#cargando indice TCI
lftci<-list.files(file.path(dir,'TCI.chl.16.1km'),full.names=TRUE,pattern='*.tif$')
ind<-which(substr(lfvci,49,55)%in%substr(lftci,49,55))
vci<-stack(lfvci[ind])
rm(vci,tci)
lfvci
vci<-stack(lfvci[343:348])
lftci
lfvci<-list.files(file.path(dir,'VCI.chl.monthly.1km'),full.names=TRUE,pattern='*.tif$')
lftci<-list.files(file.path(dir,'TCI.chl.monthly.1km'),full.names=TRUE,pattern='*.tif$')
ind<-which(substr(lfvci,71,77)%in%substr(lftci,70,76))
lfvci
vci<-stack(lfvci[180:183])
lftci
lfvci
lftci
rm(list=ls())
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/scaledIndex.R')
source('/home/francisco/Dropbox/scripts/R/MODIS/funciones/selec_period.R')
dir<-'/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/'
lflstmes<-list.files(file.path(dir,'LST.chl.month.1km'),pattern='*.tif$',full.names=TRUE)
lflstmes
indx<-lapply(1:12,FUN=function(x){seq(x,length(lflstmes),12)})
indx[[1]]
indx[[12]]
lflstmes[indx[[12]]]
lflstmes[indx[[11]]]
x<-indx[[11]]
lflstmes[x]
lst<-stack(lflstmes[x])
tci<-scaledIndex(lst,base='max',spatial.tools=TRUE,cpus=4)
names(tci)<-names(lst)
names(tci)
tcimes<-tci
names(tcimes)<-gsub('LST','TCI',names(tcimes))
writeRaster(tcimes,paste0('/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/TCI.chl.monthly.1km/',names(tcimes),'.tif'),format='GTiff',bylayer=TRUE,suffix='names',overwrite=TRUE)
rm(tci,tcimes)
x
indx
x<-indx[[12]]
x
lst<-stack(lflstmes[x])
tci<-scaledIndex(lst,base='max',spatial.tools=TRUE,cpus=4)
names(tci)<-names(lst)
tcimes<-tci
names(tcimes)<-gsub('LST','TCI',names(tcimes))
writeRaster(tcimes,paste0('/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/TCI.chl.monthly.1km/',names(tcimes),'.tif'),format='GTiff',bylayer=TRUE,suffix='names',overwrite=TRUE)
rm(tci,tcimes)
x<-indx[[1]]
x
lflstmes[x]
lst<-stack(lflstmes[x])
tci<-scaledIndex(lst,base='max',spatial.tools=TRUE,cpus=4)
names(tci)<-names(lst)
tcimes<-tci
names(tcimes)<-gsub('LST','TCI',names(tcimes))
writeRaster(tcimes,paste0('/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/TCI.chl.monthly.1km/',names(tcimes),'.tif'),format='GTiff',bylayer=TRUE,suffix='names',overwrite=TRUE)
rm(tcimes,tci
)
x
ind[[2]]
indx[[2]]
x<-indx[[2]]
lst<-stack(lflstmes[x])
tci<-scaledIndex(lst,base='max',spatial.tools=TRUE,cpus=4)
names(tci)<-names(lst)
tcimes<-tci
names(tcimes)<-gsub('LST','TCI',names(tcimes))
writeRaster(tcimes,paste0('/mnt/sdb1/Respaldo_INIA/Imagenes/Resultados/TCI.chl.monthly.1km/',names(tcimes),'.tif'),format='GTiff',bylayer=TRUE,suffix='names',overwrite=TRUE)
publish(user = "frzambra", repo = "presentacion_slidify")
library(slidify)
publish(user = "frzambra", repo = "presentacion_slidify")
getwd()
setwd('~/Dropbox/presentaciones/examen_calificacion ')
setwd('~/Dropbox/presentaciones/examen_calificacion')
publish(user = "frzambra", repo = "presentacion_slidify")
ls()
dir()
publish(user = "frzambra", repo = "presentacion_slidify")
publish(title = 'presentacion_slidify', 'index.html', host = 'rpubs')
publish_github(username = "frzambra", repo = "presentacion_slidify")
